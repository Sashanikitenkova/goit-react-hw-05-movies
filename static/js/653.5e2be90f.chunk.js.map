{"version":3,"file":"static/js/653.5e2be90f.chunk.js","mappings":"yRACA,EAA4B,0BAA5B,EAAmE,2BAAnE,EAAiH,iCAAjH,EAA0K,sCAA1K,EAAkO,gC,SC2ElO,EApEe,WACX,OAAwCA,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,CAAC,GAAzD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAaF,EAAaG,IAAI,SAC9BC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAKN,GAAIJ,EAAY,CACZ,IAAMK,EAAiB,mCAAG,2FACtBT,GAAW,GADW,mBAGaU,EAAAA,EAAAA,IAAkBN,GAH/B,OAGZO,EAHY,OAIlBb,EAAgBa,GAJE,gDAMlBC,QAAQC,IAAR,MANkB,yBAQlBb,GAAW,GARO,4EAAH,qDAWvBS,GACH,CAEJ,GAAE,CAACL,IAQJ,OACI,4BACA,gBAAKU,UAAWC,EAAhB,UACA,kBAAMC,SATW,SAAAC,GACjBA,EAAMC,iBACNf,EAAgB,CAAEgB,MAAOF,EAAMG,OAAOC,SAASF,MAAMG,MAAMC,gBAC3DN,EAAMG,OAAOI,OAChB,EAKiCV,UAAWC,EAAzC,WACA,mBAAQU,KAAK,SAASX,UAAWC,EAAjC,UACI,SAAC,MAAD,CAAUD,UAAWC,OAGzB,kBACIU,KAAK,OACLC,KAAK,QACLZ,UAAWC,EACXY,aAAa,MACbC,WAAS,EACTC,YAAY,uBAKnB9B,IAAW,SAAC,IAAD,IAGAF,EAAaiC,KAAI,SAAAC,GAAI,OACjB,SAAC,KAAD,CAAoBC,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAAEC,KAAM7B,GAA7D,UACI,wBAAKyB,EAAKK,OAASL,EAAKL,QADjBK,EAAKE,GADC,MASpC,C,qECzED,EAAyB,uB,SCEZI,EAAS,WAElB,OACM,gBAAKvB,UAAWC,EAAhB,UACG,SAAC,KAAD,CACGuB,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,MAAO,QAAS,OAAQ,SAAU,SAAU,aAIpE,C,2MChBDC,IAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHC,EAAa,mCAAG,oGACFF,IAAAA,IAAA,qCAAwCC,IADtC,cACnBE,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKbxC,EAAiB,mCAAG,WAAON,GAAP,uFACNyC,IAAAA,IAAA,+BAAkCC,EAAlC,4DAA6F1C,IADvF,cACvB4C,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,sDAKjBC,EAAiB,mCAAG,WAAOC,GAAP,uFACNP,IAAAA,IAAA,gBAAmBO,EAAnB,oBAAsCN,EAAtC,oBADM,cACvBE,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKjBI,EAAS,mCAAG,WAAOD,GAAP,uFACEP,IAAAA,IAAA,gBAAmBO,EAAnB,4BAA8CN,EAA9C,oBADF,cACfE,EADe,yBAEdA,EAASC,KAAKK,MAFA,2CAAH,sDAKTC,EAAY,mCAAG,WAAOH,GAAP,uFACDP,IAAAA,IAAA,gBAAmBO,EAAnB,4BAA8CN,EAA9C,2BADC,cAClBE,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.jsx","webpack://react-homework-template/./src/components/loader/loader.module.css?525a","components/loader/loader.jsx","services/movieApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Searchbar\":\"Movies_Searchbar__LCyHp\",\"SearchForm\":\"Movies_SearchForm__MevnG\",\"SearchFormButton\":\"Movies_SearchFormButton__O0Q6X\",\"SearchFormButtonLabel\":\"Movies_SearchFormButtonLabel__5ENVo\",\"SearchFormInput\":\"Movies_SearchFormInput__gVywz\"};","import { MdSearch } from \"react-icons/md\";\nimport { useState, useEffect } from \"react\";\nimport { useSearchParams, Link, useLocation } from \"react-router-dom\";\n// import {toast} from 'react-toastify';\nimport { Loader } from \"components/loader/loader\";\nimport { fetchSearchMovies } from \"services/movieApi\";\nimport s from './Movies.module.css';\n\nconst Movies = () => {\n    const [moviesSearch, setMoviesSearch] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [searchParams, setSearchParams] = useSearchParams({});\n    const moviesName = searchParams.get(\"movie\");\n    const location = useLocation();\n  \n    useEffect(() => {\n        // if (moviesName.trim() === '') {\n        //                 return toast(\"Search muvies name missing\");\n        // } \n\n        if (moviesName) {\n            const fetchMoviesSearch = async () => {\n                setLoading(true);\n                try {\n                    const moviesNameSearch = await fetchSearchMovies(moviesName);\n                    setMoviesSearch(moviesNameSearch);\n                } catch (error) {\n                    console.log(error);      \n                } finally {\n                    setLoading(false);\n                }\n            }\n            fetchMoviesSearch();\n        }\n\n    }, [moviesName]);\n\n    const handleSubmit = event => {\n        event.preventDefault(); \n        setSearchParams({ movie: event.target.elements.movie.value.toLowerCase() });\n        event.target.reset(); \n    }\n\n    return (\n        <div>\n        <div className={s.Searchbar}>\n        <form onSubmit={handleSubmit} className={s.SearchForm}>\n        <button type=\"submit\" className={s.SearchFormButton}>\n            <MdSearch className={s.SearchFormButtonLabel} />\n        </button>\n    \n        <input\n            type=\"text\"\n            name=\"movie\"\n            className={s.SearchFormInput}\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n        />\n    </form>\n    </div>\n\n    {loading && <Loader />}\n\n    {\n                moviesSearch.map(movi => (\n                    <Link key={movi.id} to={`/movies/${movi.id}`} state={{ from: location }}>\n                        <li>{movi.title || movi.name}</li>\n                    </Link>\n                ))\n            }\n\n    </div>\n    )   \n};\n\nexport default Movies;\n\n\n// export const Movies = () => {\n//     const [moviesSearch, setMoviesSearch] = useState([]);\n//     const [moviesName, setMoviesName] = useState('');\n\n//     // useEffect(() => {\n//     //     fetch(`https://api.themoviedb.org/3/search/movie?api_key=6fdda2cf7740f9f0b3187603c7864dcc&language=en-US&page=1&include_adult=false&query=${moviesName}`)\n//     //     .then(res => res.json())\n//     //     .then(data => data)\n//     //     .then(({results}) => setMoviesSearch(results))\n//     // }, []);\n\n//     const handleNameChange = event => {\n//         setMoviesName(event.currentTarget.value.toLowerCase());\n//     }\n\n//     const handleSubmit = event => {\n//         event.preventDefault();\n\n//         if (moviesName.trim() === '') {\n//             return toast(\"Search muvies name missing\");\n//         } \n//             fetch(`https://api.themoviedb.org/3/search/movie?api_key=6fdda2cf7740f9f0b3187603c7864dcc&language=en-US&page=1&include_adult=false&query=${moviesName}`)\n//             .then(res => res.json())\n//             .then(data => data)\n//             .then(({results}) => setMoviesSearch(results))\n        \n\n//         // onSubmit(moviesName);\n//         // setMoviesName('');\n//     }\n\n//     return (\n//         <div>\n//         <div className={s.Searchbar}>\n//         <form onSubmit={handleSubmit} className={s.SearchForm}>\n//         <button type=\"submit\" className={s.SearchFormButton}>\n//             <MdSearch className={s.SearchFormButtonLabel} />\n//         </button>\n    \n//         <input\n//             type=\"moviesName\"\n//             value={moviesName}\n//             className={s.SearchFormInput}\n//             autoComplete=\"off\"\n//             autoFocus\n//             placeholder=\"Search movies\"\n//             onChange={handleNameChange}\n//         />\n//     </form>\n//     </div>\n\n//     {\n//                 moviesSearch.map(movi => (\n//                     <Link key={movi.id} to={`/movies/${movi.id}`}>\n//                         <li>{movi.title || movi.name}</li>\n//                     </Link>\n//                 ))\n//             }\n\n//     </div>\n//     )   \n// }","// extracted by mini-css-extract-plugin\nexport default {\"Loader\":\"loader_Loader__rtbh8\"};","import { Vortex } from  'react-loader-spinner';\nimport s from './loader.module.css';\n\nexport const Loader = () => {\n\n    return (\n          <div className={s.Loader}>\n             <Vortex\n                visible={true}\n                height=\"80\"\n                width=\"80\"\n                ariaLabel=\"vortex-loading\"\n                wrapperStyle={{}}\n                wrapperClass=\"vortex-wrapper\"\n                colors={['red', 'green', 'blue', 'yellow', 'orange', 'purple']}\n            />\n         </div>\n          )\n};","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '6fdda2cf7740f9f0b3187603c7864dcc';\n\nexport const fetchTrending = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n};\n\nexport const fetchSearchMovies = async (moviesName) => {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${moviesName}`);\n    return response.data.results;\n};\n\nexport const fetchMovieDetails = async (movieId) => {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const fetchCast = async (movieId) => {\n    const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data.cast;\n}\n\nexport const fetchReviews = async (movieId) => {\n    const response = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data.results;\n}"],"names":["useState","moviesSearch","setMoviesSearch","loading","setLoading","useSearchParams","searchParams","setSearchParams","moviesName","get","location","useLocation","useEffect","fetchMoviesSearch","fetchSearchMovies","moviesNameSearch","console","log","className","s","onSubmit","event","preventDefault","movie","target","elements","value","toLowerCase","reset","type","name","autoComplete","autoFocus","placeholder","map","movi","to","id","state","from","title","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","axios","API_KEY","fetchTrending","response","data","results","fetchMovieDetails","movieId","fetchCast","cast","fetchReviews"],"sourceRoot":""}